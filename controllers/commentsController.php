<?	namespace controllers;	class commentsController extends \controller{								public function add(){			$data['user_login']=user()->info('login');			$data['film_id']=(int)$_POST['film_id'];			$data['text']=$_POST['text'];			if($_POST['cash'])$data['cash']=$_POST['cash'];									$com= new \models\comments();			if($com->add($data)){							\cache::delete('/comments/'.$data['film_id'].'/',true);				\cache::delete('/menu_last_com/',true);				\cache::delete('/lcfilms/',true);												\msg::set('success','Комментарий добавлен');			}			core()->backpage();		}				public function uradd(){						$data['film_id']=(int)$_POST['film_id'];			$data['text']=$_POST['text'];			$data['unregname']=$_POST['unregname'];									$com= new \models\comments();			if($id=$com->add($data,true)){				\msg::set('success','Комментарий добавлен. Будет проверен администрацией в течении 24 часов и опубликован на сайте.');				setcookie ("lastcom_id", $id,time()+3600*72, "/");				setcookie ("lastcom_filmid", $data['film_id'],time()+3600*72, "/");			}			core()->backpage();		}				public function changeForm(){						if($_GET['page']){				$page=(int)$_GET['page'];			}else{				$page=1;			}			if($_GET['login'] && preg_match('/([a-zA-Z0-9]+)/i',$_GET['login'])){				$login=$_GET['login'];			}			/*			$page=core()->request('page');			$login=core()->request('login');									$hp=NULL;			if($_POST['login']){				$login=$_POST['login'];				$hp='/service/comments/change/'.$login.'/';			}			*/						$com= new \models\comments();			$com			->select('comments.id,comments.paid,comments.user_login, unregname, comments.text, comments.timestamp,comments.film_id,comments.activate,films.url,films.name')			->leftjoin('films','films.id','comments.film_id')			->orderby(array('timestamp'=>'desc'));									if($login){				$com->where(array('user_login'=>$login));				$data['user_login']=$login;			}						if($_GET['activate']){				$com->where(array('activate'=>'0'));				$data['activate']=1;			}			if($_GET['unreg']){				$com->where(array('unregname !='=>''));				$data['unreg']=1;			}						$data['list']=$com->getAllByPage($page,config('table_list_count'),$num);						$paginator = new \paginator($num,config('table_list_count'),$page);			$paginator->get=true;						$users= new \models\users();			$data['users_list']=$users->select('login')->orderby(array('login'=>'asc'))->getAll();						$data['page']=$paginator->build();			if($_POST['id']){				$dataCom['captcha']= \form::getCaptcha(array('width'=>150));				$dataCom['com']=$com->select('id,text,unregname,film_id,activate')->get($_POST['id']);				$dataCom['change']=true;				if($dataCom['com']['unregname']=='')$dataCom['com']['unregname']=false;				$data['comForm']=$this->render('comments/form',$dataCom);			}			$data['title']='Все комментарии';			$data['h1']='Все комментарии';				$data['noindex']='noindex';						$this->finalRender('comments/change',$data);		}				public function my($page=1){			$data['title']='Мои комментарии';			$data['h1']='Мои комментарии';			$data['noindex']='noindex';			$com= new \models\comments();			$com			->select('comments.id,comments.paid, comments.text, comments.activate, comments.timestamp,comments.film_id,films.url,films.name')			->leftjoin('films','films.id','comments.film_id')			->orderby(array('timestamp'=>'desc'))			->where(array('user_login'=>user()->info('login')));			$data['list']=$com->getAllByPage($page,config('table_list_count'),$num);			$paginator = new \paginator($num,config('table_list_count'),$page);			$data['page']=$paginator->build();									if($_POST['id']){				$dataCom['captcha']= \form::getCaptcha(array('width'=>150));				$dataCom['com']=$com->select('id,text,film_id')->where(array('activate'=>0,'user_login'=>user()->info('login')))->get($_POST['id']);				$dataCom['change']=true;				$dataCom['changeMy']=true;				if($dataCom['com']['id']){					$data['comForm']=$this->render('comments/form',$dataCom);				}				}						$this->finalRender('comments/my',$data);		}				public function change(){			$com= new \models\comments();						$film_id=(int)$_POST['film_id'];			$_POST['id']=(int)$_POST['id'];						\cache::delete('/comments/'.$film_id.'/',true);			\cache::delete('/menu_last_com/',true);			\cache::delete('/lcfilms/',true);			if($_POST['delete']){				$com->delete($_POST['id']);				user()->addlog('Удалил комментарий №'.$_POST['id']." в фильме  №".$film_id);				\msg::set('success','Комментарий удален');				core()->backpage();			}			$activate=(int)$_POST['activate'];			$data=			$com->update($_POST['id'],array('text'=>$_POST['text'],'unregname'=>$_POST['unregname'],'activate'=>$activate));			\msg::set('success','Комментарий изменен');			user()->addlog('Изменил комментарий №'.$_POST['id']." в фильме  №".$film_id);						core()->backpage();		}						public function changeMy(){			$com= new \models\comments();						$film_id=(int)$_POST['film_id'];			$_POST['id']=(int)$_POST['id'];			if($film_id && $_POST['id']){								if($_POST['delete']){										$com->where(array('activate'=>0,'user_login'=>user()->info('login'),'film_id'=>$film_id))->delete($_POST['id']);					user()->addlog('Удалил комментарий №'.$_POST['id']." в фильме  №".$film_id);					\msg::set('success','Комментарий удален');					core()->backpage();				}								if(mb_strlen ($_POST['text'])<config('min_com_len')){					\msg::set('error','Размер комментария должен быть больше '.config('min_com_len').' символов');					core()->backpage();				}								$com->where(array('activate'=>0,'user_login'=>user()->info('login'),'film_id'=>$film_id))->update($_POST['id'],array('text'=>$_POST['text']));				\msg::set('success','Комментарий изменен');				user()->addlog('Изменил комментарий №'.$_POST['id']." в фильме  №".$film_id);			}			core()->backpage();		}				public function activate(){			$com_id=(int)$_POST['com_id'];			$film_id=(int)$_POST['film_id'];			if($com_id && $film_id){				$com= new \models\comments();				$com->update($com_id,array('activate'=>1));				$data=db()->getBySql("select COUNT(`id`) as `count` from `comments` where `activate`='1' and `film_id`='$1' group by `film_id`",array('$1'=>$film_id));				$films=  new \models\films();				$films->update($film_id,array('comments'=>$data['count']));				\cache::delete('/comments/'.$film_id.'/',true);				\cache::delete('/menu_last_com/',true);				\cache::delete('/lcfilms/',true);			}		}				public function accessRules(){			return array(				'changeForm'=>(user()->info('id')==1),				'change'=>(user()->info('id')==1),				'changeMy'=>user()->isAuth(),				'activate'=>(user()->info('id')==1),				'add'=>user()->isAuth(),				'my'=>user()->isAuth(),			);		}				public function captchaRules(){				 return array('add','uradd','change','changeMy');		}							}?>