<?	namespace controllers;	class genreController extends \controller{		public function index($page=1){			$this->finalRender('films/main');		}						public function detail($id,$url,$page=1){								$genre=\cache::read('/genre/'.$id,				function($id){					$genre=new \models\genre();					return $genre->select('id, name, url, text, anime')->get($id);				},array($id));						if(!$genre['id']){				core()->code404();			}						if($genre['url']!=$url){				if($page>1)$pg='page/'.$page.'/';				core()->code301('/genre/'.$genre['id'].'-'.$genre['url'].'/'.$pg);			}									if($id==config('animegenre_id')){				$data['animegenrelist']=\cache::read('/animegenrelist/',				function(){					$genre=new \models\genre();					return $genre->select('id, name, url')->where(array('anime'=>'1'))->orderBy(array('name'=>'asc'))->getAll();				});			}												$films=new \models\films();			$sort=(int)$_COOKIE['sort'];			$sortType=(int)$_COOKIE['sortType'];						if($sort && $sortType){				$films= new \models\films();				$nocachedata['list']=$films->getFilmsByGenre($id,$page,config('list_count'),$num);				$nocachedata['num']=$num;				$cachedata=$nocachedata;							}else{							$cachedata=\cache::read('/genrefilms/'.$id.'/'.$page,					function($id,$page){						$films= new \models\films();						$data['list']=$films->getFilmsByGenre($id,$page,config('list_count'),$num);						$data['num']=$num;						return $data;					},array($id,$page));			}			$data['list']=$cachedata['list'];			if(!$data['list'] && $page>1)core()->code404();						$num=$cachedata['num'];						$paginator = new \paginator($num,config('list_count'),$page);			$data['page']=$paginator->build();																													$data['h1']=$genre['name'];						if($genre['anime']){				$anime="аниме жанра ";				$data['h1'].=' (Аниме)';			}							$data['title']=$genre['name'].' смотреть онлайн бесплатно, лучшие '.$anime.''.$genre['name'].' '.date('Y').' года в хорошем качестве';			$data['description']='Посмотрите бесплатно онлайн  '.$anime.''.$genre['name'].' в хорошем качестве, расположенные на notfilm.ru. '.\str::crop($genre['text'],120);			$data['keywords']= $anime.' '.$genre['name'].', смотреть, онлайн, бесплатно, лучшие, фильмы, список';			if($page<2){				$data['footer_text']=$genre['text'];				if($genre['anime']){					$data['footer_title']='Аниме жанра «'.$genre['name'].'» смотреть онлайн бесплатно в хорошем качестве';				}else{					$data['footer_title']=$genre['name'].' смотреть онлайн бесплатно в хорошем качестве';				}								if($img=\image::get('/uploads/genre/'.$genre['id'].'/'.$genre['url'].'.jpg')){					$data['footer_img']=$img->cropPath;						$data['og_image']="http://notfilm.ru".$data['footer_img'];				}				}else{				$data['title'].=". Страница ".$page;				$data['description'].=". Страница ".$page;				$data['keywords'].=". страница ".$page;				$data['noindex']='noindex';				}												$data['quality']=$films->getQuality();						$this->addScript("/soclikes/social-likes.min.js");			$this->addStyle("/soclikes/social-likes_classic.css");			$data['soclikes']=1;						switch($id){				case config('animegenre_id'):					$data['h2list']='Список аниме';					break;				case config('serialgenre_id'):					$data['h2list']='Список сериалов';					break;				case config('showgenre_id'):					$data['h2list']='Список ТВ-Шоу';					break;				case config('multgenre_id'):					$data['h2list']='Список мультфильмов';					break;				}			if($genre['anime']){				$data['h2list']='Список аниме';			}						if($id==config('serialgenre_id') || $id==config('showgenre_id') || $id==config('animegenre_id')){				$data['startSort']=6;			}else{				$data['startSort']=1;			}						$this->finalRender('films/list',$data);		}				public function addForm(){						$data['captcha']= \form::getCaptcha(array('width'=>150));						$data['title']='Добавить категорию';			$data['h1']='Добавить категорию';			$data['noindex']='noindex';			$this->finalRender('genre/add',$data);		}				public function add(){			$data=$this->filt($_POST,'name','text','anime');			$genre= new \models\genre();			if($genre->add($data)){								\cache::delete('/menu_genre_list/',true);				\cache::delete('/animegenrelist/',true);				user()->addlog('Добавил категорию '.$data['name']);			}			core()->backpage();		}				public function changeForm(){			$data['update']=true;			$genre= new \models\genre();			if($_POST['id']){				$data=array_merge($data,$genre->get($_POST['id']));				if($img=\image::get('/uploads/genre/'.$data['id'].'/'.$data['url'].'.jpg')){					$data['img']=$img->cropPath;				}			}			$data['list']=$genre->addrule('select','id,name,anime')->addRule('orderBy',array('name'=>'asc'))->getAll();			$data['captcha']= \form::getCaptcha(array('width'=>150));						foreach($data['list'] as $idrow=>$row){				if($row['anime'])$data['list'][$idrow]['name'].=' (Аниме)';			}						$data['title']='Изменить категорию';			$data['h1']='Изменить категорию';			$data['noindex']='noindex';			$this->finalRender('genre/add',$data);		}				public function change(){			$_POST['id']=(int)$_POST['id'];			if($_POST['id']){				$data=$this->filt($_POST,'name','text','anime');				$id=$_POST['id'];				$genre= new \models\genre();				if($genre->change($id,$data)){									\cache::delete('/menu_genre_list/',true);					\cache::delete('/genre/'.$_POST['id']);					\cache::delete('/animegenrelist/',true);					user()->addlog('Изменил категорию '.$data['name']);				}			}			core()->backpage();		}				public function deleteForm(){					$genre= new \models\genre();			$data['list']=$genre->addrule('select','id,name,anime')->addRule('orderBy',array('name'=>'asc'))->getAll();			$data['captcha']= \form::getCaptcha(array('width'=>150));						foreach($data['list'] as $idrow=>$row){				if($row['anime'])$data['list'][$idrow]['name'].=' (Аниме)';			}						$data['title']='Удалить категорию';			$data['h1']='Удалить категорию';			$data['noindex']='noindex';			$this->finalRender('genre/delete',$data);		}				public function delete(){			$_POST['id']=(int)$_POST['id'];			if($_POST['id']){				$genre= new \models\genre();				$data=$genre->select('name')->get($_POST['id']);				$genre->delete($_POST['id']);				user()->addlog('Удалил категорию '.$data['name']);				\cache::delete('/menu_genre_list/',true);				\cache::delete('/genre/'.$_POST['id']);				\cache::delete('/genrefilms/'.$_POST['id'].'/',true);				\cache::delete('/animegenrelist/',true);			}			core()->backpage();		}				public function accessRules(){			return array(				'addForm'=>(user()->info('id')==1),				'add'=>(user()->info('id')==1),				'changeForm'=>(user()->info('id')==1),				'change'=>(user()->info('id')==1),				'deleteForm'=>(user()->info('id')==1),				'delete'=>(user()->info('id')==1),			);		}		public function captchaRules(){		 return array('add','change','delete');		}	}?>