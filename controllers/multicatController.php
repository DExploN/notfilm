<?	namespace controllers;	class multicatController extends \controller{		public function index($page=1){			$this->finalRender('films/main');		}				public function detail($id,$url,$page=1){			$data['id']=$id;			$multicat=\cache::read('/multicat/'.$id,				function($id){					$multicat=new \models\multicat();					return $multicat->get($id);				},array($id));										if(!$multicat['id']){				core()->code404();			}						if($multicat['url']!=$url){				if($page>1)$pg='page/'.$page.'/';				core()->code301('/multicat/'.$multicat['id'].'-'.$multicat['url'].'/'.$pg);			}						$multiobj=new \models\multicat();			$multidata=$multiobj->filtertodata($multicat['filter']);						$multidata['actors']=$multicat['actors'];						$query=$multiobj->datatoquery($multidata);						if(!$query)core()->code404();									$films=new \models\films();						$sort=(int)$_COOKIE['sort'];			$sortType=(int)$_COOKIE['sortType'];																if($sort && $sortType){				$films= new \models\films();				$nocachedata['list']=$films->getFilmsByQuery($query,$page,config('list_count'),$num);				$nocachedata['num']=$num;				$cachedata=$nocachedata;							}else{				$cachedata=\cache::read('/multifilms/'.$id.'/'.$page,					function($id,$page,$query){						$films= new \models\films();						$data['list']=$films->getFilmsByQuery($query,$page,config('list_count'),$num);						$data['num']=$num;														// Заполнение films_multicat								//$idsquery="`select `id`,count(`multicat_id`) as `cnt` from `films` left join `films_multicat` on `films`.`id`=`films_multicat`.`films_id` where ".$query." group by `id` having `cnt`<4 order by `cnt`,`year` asc";																db()->where(array('multicat_id'=>$id))->delete('films_multicat');									$arrids=$films->addRule('where',$query,array())->addRule('select','`id`,count(`multicat_id`) as `cnt`',true)									->leftJoin('films_multicat','films.id','films_multicat.films_id')									->groupBy('id')									->having(array('cnt <'=>3))									->orderBy(array('cnt'=>'asc','year'=>'desc'))									->limit(50)									->getall();																$idsinsert=array();																foreach($arrids as $row){									$idsinsert[]=array('multicat_id'=>$id,'films_id'=>$row['id']);								}								if(count($idsinsert)){									db()->inserts('films_multicat',array('films_id','multicat_id'),$idsinsert);								}																														//						return $data;					},array($id,$page,$query));			}						$data['list']=$cachedata['list'];			if(!$data['list'] && $page>1)core()->code404();						$num=$cachedata['num'];									$paginator = new \paginator($num,config('list_count'),$page);			$data['page']=$paginator->build();						$data['h1']=$multicat['name'].' смотреть онлайн';			$data['title']=$multicat['name'].' смотреть онлайн бесплатно';			$data['description']='В этом списке собраны лучшие '.$multicat['name'].'. Смотрите их онлайн бесплатно в хорошем качестве. '.\str::crop($multicat['text'],120);;			$data['keywords']=$multicat['name'].", смотреть, онлайн, бесплатно, лучшие, список";						if($multicat['name2']){				$data['title'].=', список лучших '.$multicat['name2'];			}else{				$data['title'].=', список лучших фильмов';			}			if($page<2){								$data['footer_text']=$multicat['text'];				$data['footer_title']='Смотрите бесплатно лучшие '.$multicat['name'];														if($multicat['name2']){					$data['footer_title'].=' в списке '.$multicat['name2'];				}									}else{				$data['title'].=". Страница ".$page;				$data['description'].=". Страница ".$page;				$data['keywords'].=", страница ".$page;				$data['noindex']='noindex';			}						$data['quality']=$films->getQuality();																		$this->addScript("/soclikes/social-likes.min.js");			$this->addStyle("/soclikes/social-likes_classic.css");						$data['soclikes']=1;						$data['startSort']=6;						if($_COOKIE['offers']<config('maxoffer_count'))$data['addbut']=$multicat['name'];						if(!$data['list'])$data['noindex']=true;			$this->finalRender('films/list',$data);					}				public function all($page=1){			$multicat= new \models\multicat();			$data['list']=$multicat->select('id,name,url')->orderby(array('name'=>'asc'))->getAllByPage($page,config('all_sel_count'),$num);						$paginator = new \paginator($num,config('all_sel_count'),$page);			$data['page']=$paginator->build();						$data['h1']='Мультикатегории';			$data['title']='Список всех мультикатегорий';			$data['description']='Мультикатегории  на notfilm.ru';			$data['keywords']='Список, всех, мультикатегорий';			if($page>1){				$data['title'].=". Страница ".$page;				}						$this->finalRender('multicat/grid',$data);		}				public function addForm(){						$data['captcha']= \form::getCaptcha(array('width'=>150));												$data['title']='Добавить мультикатегорию';			$data['h1']='Добавить мультикатегорию';			$data['noindex']='noindex';						$genre= new \models\genre();			$arr=$genre->select('id,name,anime')->orderBy(array('name'=>'asc'))->getAll();			$data['genre_list']=array();			foreach($arr as $idsrow=>$row){					if($row['anime'] && $row['id']!=config('animegenre_id')){						$data['anime_genre_list'][]=$row;					}else{						$data['genre_list'][]=$row;					};				}			array_unshift($data['genre_list'],array('id'=>0,'name'=>'-'));						$selection= new \models\selection();			$arr=$selection->select('id,name')->orderBy(array('name'=>'asc'))->getAll();			array_unshift($arr,array('id'=>0,'name'=>'-'));			$data['selection_list']=$arr;						$multicat= new \models\multicat();			$data['type_list']=$multicat->getType();						$country= new \models\country();			$arr=$country->select('id,name')->orderBy(array('name'=>'asc'))->getAll();			array_unshift($arr,array('id'=>0,'name'=>'-'));			$data['country_list']=$arr;			$this->addScript('/js/plugins/copyCont.js');			$this->finalRender('multicat/add',$data);		}				public function add(){						$data=$this->filt($_POST,'name','name2','actors','text');			$multicat= new \models\multicat();			$data['filter']=$multicat->datatofilter($_POST);											if($multicat->add($data)){				user()->addlog('Добавил мультикат '.$data['name']);			}									core()->backpage();		}				public function changeForm(){						$data['update']=true;			$multicat= new \models\multicat();			if($_POST['id']){				$data=array_merge($data,$multicat->get($_POST['id']));			}						$data['list']=$multicat->addrule('select','id,name')->addRule('orderBy',array('name'=>'asc'))->getAll();			$data['captcha']= \form::getCaptcha(array('width'=>150));						$data['title']='Изменить мультикатегорию';			$data['h1']='Изменить мультикатегорию';			$data['noindex']='noindex';									$genre= new \models\genre();			$arr=$genre->select('id,name,anime')->orderBy(array('name'=>'asc'))->getAll();			$data['genre_list']=array();			foreach($arr as $idsrow=>$row){					if($row['anime'] && $row['id']!=config('animegenre_id')){						$data['anime_genre_list'][]=$row;					}else{						$data['genre_list'][]=$row;					};				}			array_unshift($data['genre_list'],array('id'=>0,'name'=>'-'));						$selection= new \models\selection();			$arr=$selection->select('id,name')->orderBy(array('name'=>'asc'))->getAll();			array_unshift($arr,array('id'=>0,'name'=>'-'));			$data['selection_list']=$arr;						$multicat= new \models\multicat();			$data['type_list']=$multicat->getType();						$country= new \models\country();			$arr=$country->select('id,name')->orderBy(array('name'=>'asc'))->getAll();			array_unshift($arr,array('id'=>0,'name'=>'-'));			$data['country_list']=$arr;									$data=array_merge($data,$multicat->filtertodata($data['filter']));						$this->addScript('/js/plugins/copyCont.js');						$this->finalRender('multicat/add',$data);		}				public function change(){			$_POST['id']=(int)$_POST['id'];			if($_POST['id']){				$data=$this->filt($_POST,'name','name2','actors','text');				$multicat= new \models\multicat();				$data['filter']=$multicat->datatofilter($_POST);								if($multicat->change($_POST['id'],$data)){					\cache::delete('/multicat/'.$_POST['id']);					\cache::delete('/multifilms/'.$_POST['id'].'/',true);					user()->addlog('Изменил мультикат '.$data['name']);				}											}			core()->backpage();		}				public function deleteForm(){						$multicat= new \models\multicat();			$data['list']=$multicat->addrule('select','id,name')->addRule('orderBy',array('name'=>'asc'))->getAll();			$data['captcha']= \form::getCaptcha(array('width'=>150));						$data['title']='Удалить подборку';			$data['h1']='Удалить подборку';			$data['noindex']='noindex';			$this->finalRender('multicat/delete',$data);		}				public function delete(){			$_POST['id']=(int)$_POST['id'];			if($_POST['id']){				$multicat= new \models\multicat();				$data=$multicat->select('name')->get($_POST['id']);				if($multicat->delete($_POST['id'])){											\cache::delete('/multicat/'.$_POST['id']);					\cache::delete('/multifilms/'.$_POST['id'].'/',true);				}											}			core()->backpage();		}								public function accessRules(){			return array(				'addForm'=>(user()->info('id')==1),				'add'=>(user()->info('id')==1),				'changeForm'=>(user()->info('id')==1),				'change'=>(user()->info('id')==1),				'deleteForm'=>(user()->info('id')==1),				'delete'=>(user()->info('id')==1),			);		}				public function captchaRules(){		return array('add','change','delete');		}			}?>