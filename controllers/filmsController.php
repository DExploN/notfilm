<?	namespace controllers;	class filmsController extends \controller{		public function index($page=1){					$films=new \models\films();						$sort=(int)$_COOKIE['sort'];			$sortType=(int)$_COOKIE['sortType'];						if($sort && $sortType){				$films= new \models\films();				$nocachedata['list']=$films->getIndexFilms($page,config('list_count'),$num);				$nocachedata['num']=$num;				$cachedata=$nocachedata;			}else{				$cachedata=\cache::read('/main/'.$page,					function($page){						$films= new \models\films();						$data['list']=$films->getIndexFilms($page,config('list_count'),$num);						$data['num']=$num;						return $data;					},array($page));			}								$data['list']=$cachedata['list'];			$num=$cachedata['num'];						if(!$data['list']  && $page>1)core()->code404();											$paginator = new \paginator($num,config('list_count'),$page);			$data['page']=$paginator->build();						$data['main_page']=true;						$data['quality']=$films->getQuality();						if($page<2){				if($txt=\file::get('/texts/main.txt'))$data['footer_text']=file_get_contents($txt->path);								$data['footer_title']='Смотрите фильмы онлайн бесплатно в хорошем качестве';				$data['footer_img']='';			}						$data['h1']='Фильмы онлайн';			$data['title']='Смотреть фильмы онлайн бесплатно, новые кинофильмы '.date("Y").' года в хорошем качестве HD 720' ;			$data['description']='На сайте notfilm.ru Вы найдете бесплатные онлайн фильмы в хорошем качестве, а так же новинки '.date("Y").' года';			$data['keywords']='Фильмы, онлайн, смотреть, бесплатно, хорошее, качество, новинки';			if($page>1){				$data['title'].=". Страница ".$page;				$data['description'].=". Страница ".$page;				$data['keywords'].=", cтраница ".$page;			}						$this->addScript("/soclikes/social-likes.min.js");			$this->addStyle("/soclikes/social-likes_classic.css");			$data['soclikes']=1;									$data['startSort']=6;						$this->finalRender('films/list',$data);											}				public function detail($id,$url){						$films= new \models\films();			$data['quality']=$films->getQuality();						$cachedata=				\cache::read('/film/'.$id.'/',				function($id){					$films= new \models\films();					$data['film']=$films->getDetailFilm($id);					$data['perelinkone']=array_shift($films->select('id,name,url,year,anime,show,serial')->perelink($data['film']['id'],1));					$data['perelinkone']['id']=(int)$data['perelinkone']['id'];										if(count($data['film']['selection'])){						$data['perelink']=$films->where(array('id !='=>$data['perelinkone']['id']))->getPerelink($data['film']['id'],config('perelink_count'),'selection',$data['film']['parts']);					}else{						if(!$data['film']['serial']){							$data['perelink']=$films->where(array('id !='=>$data['perelinkone']['id']))->getPerelink($data['film']['id'],config('perelink_count'),'genre',$data['film']['parts']);						}else{							$data['perelink']=$films->where(array('id !='=>$data['perelinkone']['id']))->getPerelink($data['film']['id'],config('perelink_count'),array('genre'=>config('serialgenre_id')),$data['film']['parts']);						}							}							$data['other_parts']=$films->getOtherParts($data['film']['id'],$data['film']['parts']);					return $data;				},array($id));						$data['film']=$cachedata['film'];			$data['perelink']=$cachedata['perelink'];			$data['perelinkone']=$cachedata['perelinkone'];			$data['other_parts']=$cachedata['other_parts'];											if(!$data['film']['id']){				core()->code404();			}						if($data['film']['url']!=$url){				core()->code301('/film/'.$data['film']['id'].'-'.$data['film']['url'].'/');			}			/*			if($data['film']['genre']){				foreach($data['film']['genre'] as $genrerow){					if($genrerow['id']==config('docgenre_id')){						$data['film']['documental']=1;					}					if($genrerow['id']==config('multgenre_id')){						$data['film']['mult']=1;					}				}			}			*/			$data['id']=$data['film']['id'];						$lastcom_filmid=(int)$_COOKIE['lastcom_filmid'];			$lastcom_id=(int)$_COOKIE['lastcom_id'];						if(!user()->isAuth() && $lastcom_filmid!=$id){				$data['comments']=					\cache::read('/comments/'.$id.'/',					function($id){						$com= new \models\comments();						return $com->getAllByFilm($id);					},array($id));			}else{				$com= new \models\comments();				if($lastcom_filmid!=$id)$lastcom_id=0;				$data['comments']=$com->getAllByFilm($id,user()->info('login'),$lastcom_id);			}						foreach($data['comments'] as $item){				if($item['user_login']==user()->info('login')){					$data['commented']=true;					break;				}			}			$_GET['cash']=NULL;			if($_GET['cash'])$data['noindex']='noindex';			if(!$data['commented'] && $_GET['cash']=='ok' && user()->isAuth()){								if($films->isCashed($id)){					$dataCom['cash']=md5(user()->info('login').$id.user()->info('timestamp'));				}			}						$dataCom['captcha']= \form::getCaptcha(array('width'=>150));			$dataCom['add']=true;			$dataCom['film_id']=$id;			if(!user()->isAuth())$dataCom['unregname']=true;			$data['comForm']=$this->render('comments/form',$dataCom);									$data['title']=$data['film']['name'];												if($data['film']['show'] && $data['film']['channel'])$data['title'].=" (".$data['film']['channel'].") ";			if($data['film']['year']!='0000'  && !$data['film']['serial'] && !$data['film']['anime'] && !$data['film']['show'])$data['title'].=" (".$data['film']['year'].")";						if($data['film']['serial'] || $data['film']['anime']){				if(!$data['film']['endSer']){					if($data['film']['lastSer']==1){						if(!$data['film']['endSer']){							$data['title'].=" 1, 2 серия ";						}else{							$data['title'].=" 1 серия ";						}					}elseif($data['film']['lastSer']){						$data['title'].=" 1-".$data['film']['lastSer'];						if(!$data['film']['endSer']){							$data['title'].=", ".($data['film']['lastSer']+1);						}						$data['title'].=" серия ";					}				}							}elseif($data['film']['show']){				$film_date=new \DateTime($data['film']['lastSerDate']);								if($data['film']['lastSer'] && $data['film']['lastSerDate']=="0000-00-00"){$data['title'].=" ".$data['film']['lastSer']." выпуск";}				if($data['film']['lastSer'] && $data['film']['lastSerDate']!="0000-00-00"){$data['title'].=" ".$data['film']['lastSer']." выпуск (".$film_date->format('d.m.Y').")";}				if(!$data['film']['lastSer'] && $data['film']['lastSerDate']!="0000-00-00"){$data['title'].=" выпуск от ".$film_date->format('d.m.Y')."";}			}			$data['title'].=" смотреть онлайн";						if($data['film']['mult'])$data['title']=$data['title'].=" мультфильм";			if(!$data['film']['mult'] && !$data['film']['serial'] && !$data['film']['anime'] && !$data['film']['show'] && !$data['film']['documental'] )$data['title']=$data['title'].=" фильм";						if($data['film']['serial'] || $data['film']['anime'])$data['title'].=($data['film']['serial'])?" сериал ":" аниме ";			if($data['film']['documental'])$data['title'].=" документальный фильм";						$data['title'].=" бесплатно";			/*if($data['film']['quality']==2 && !$data['film']['show'] && !$data['film']['anime'])$data['title'].=" в хорошем качестве HD 720";*/									$data['description']=$data['film']['name'];											if($data['film']['show'] && !$data['film']['serial'] && !$data['film']['anime']){				$film_date=new \DateTime($data['film']['lastSerDate']);				if($data['film']['channel'])$data['description'].=" (".$data['film']['channel'].") ";;				if($data['film']['lastSer'] && $data['film']['lastSerDate']=="0000-00-00"){$data['description'].=" последний ".$data['film']['lastSer']." выпуск";}				if($data['film']['lastSer'] && $data['film']['lastSerDate']!="0000-00-00"){$data['description'].=" последний ".$data['film']['lastSer']." выпуск (".$film_date->format('d.m.Y').")";}				if(!$data['film']['lastSer'] && $data['film']['lastSerDate']!="0000-00-00"){$data['description'].=" последний выпуск от  ".$film_date->format('d.m.Y')."";}			}										if($data['film']['year']!='0000'  && !$data['film']['show'])$data['description'].=" (".$data['film']['year'].")";												$data['description']="Смотреть онлайн ".(($data['film']['serial'])?"сериал ":"").(($data['film']['anime'])?"аниме ":"").$data['description'];																$data['description']=\str::crop($data['film']['text'],100).'. '.$data['description'];															$data['keywords']=$data['film']['name'];			if($data['film']['ori'] && $data['film']['anime'])$data['keywords'].=', '.$data['film']['ori'];									if($data['film']['show'] && $data['film']['channel'])$data['keywords'].=", ".$data['film']['channel'];						if($data['film']['year']!='0000')$data['keywords'].=", ".$data['film']['year'];			$data['keywords'].=', смотреть,  онлайн, бесплатно';						if($data['film']['quality']==2)$data['keywords'].=", хорошее качество HD 720";			if($data['film']['documental'])$data['keywords'].=", документальный фильм";						if($data['film']['serial'] || $data['film']['anime']){				$data['keywords'].=($data['film']['serial'])?", сериал, все серии":", аниме";				if($data['film']['lastSer'])$data['keywords'].=", последняя серия ".$data['film']['lastSer'];				if($data['film']['nextSerDate']!='0000-00-00')$data['keywords'].=", дата выхода ".($data['film']['lastSer']+1)." серии";												if($data['film']['lastSer']>1){					$flg=" 1-".$data['film']['lastSer'];				}								if($data['film']['serial'])$data['description'].=" все $flg серии подряд";				if($data['film']['anime'])$data['description'].=($flg)?"$flg серии":"";							}elseif($data['film']['show']){				if($data['film']['lastSer']){					$film_date=new \DateTime($data['film']['lastSerDate']);					$data['keywords'].=", последний выпуск ".$data['film']['lastSer']." ";					if($data['film']['lastSerDate']!='0000-00-00')$data['keywords'].=$film_date->format('d.m.Y');				}elseif($data['film']['lastSerDate']!='0000-00-00'){					$film_date=new \DateTime($data['film']['lastSerDate']);					$data['keywords'].=", последний выпуск ".$film_date->format('d.m.Y');				}				if($data['film']['nextSerDate']!='0000-00-00' && $data['film']['lastSer'])$data['keywords'].=", дата выхода ".($data['film']['lastSer']+1)." выпуска";			}												$data['film']['img']="/uploads/films/".$data['film']['id']."/".$data['film']['url'].".jpg";									$data['og_image']="http://notfilm.ru".$data['film']['img'];			$data['og_title']=$data['film']['name'];			if($data['film']['year']!='0000' && !$data['film']['anime'] && !$data['film']['serial'] && !$data['film']['show'])$data['og_title'].=' ('.$data['film']['year'].')';						$data['og_url']="http://notfilm.ru".'/film/'.$data['film']['id'].'-'.$data['film']['url'].'/';			$data['og_type']='article';						$this->addScript("/soclikes/social-likes.min.js");			$this->addStyle("/soclikes/social-likes_classic.css");						db()->query("update `films` set `views`=`views`+1 where `id`='$1'",array("$1"=>$id));						if($data['film']['titl'])$data['title']=$data['film']['titl'];									//						$data['film']['site_links']=array();						$se_query='';			if($data['film']['serial']){				$se_query='сериал ';			}elseif($data['film']['mult']){				$se_query='мультфильм ';			}elseif($data['film']['anime']){				$se_query='аниме ';			}elseif(!$data['film']['show']){				$se_query='фильм ';			}			$se_query.=$data['film']['name'].' ';						if($data['film']['year']!='0000'  && !$data['film']['serial'] && !$data['film']['anime'] && !$data['film']['show'])$se_query.=$data['film']['year'].' ';						if($data['film']['serial'] && $data['film']['lastSer']){				$se_query.='серия '.$data['film']['lastSer'].' ';			}elseif($data['film']['show'] && $data['film']['lastSer']){				$se_query.='выпуск '.$data['film']['lastSer'].' ';			}						if($data['film']['lastSerDate']!='0000-00-00'){				$film_date=new \DateTime($data['film']['lastSerDate']);				$se_query.=$film_date->format('d.m.Y');			}				$se_query=str_replace("("," ",$se_query);			$se_query=trim(str_replace(")"," ",$se_query));						if($data['film']['s_links']){				$data['film']['s_links']=explode(";",$data['film']['s_links']);				foreach($data['film']['s_links'] as $row){					if($row){						$link=explode("|",$row);												if($link[1]){							$data['film']['site_links'][]=array('name'=>$link[0],'link'=>$link[1]);						}else{							$link[0]=trim($link[0]);							$arrtmp=parse_url($link[0]);							if($arrtmp['host']){								$data['film']['site_links'][]=array('name'=>$arrtmp['host'],'link'=>$link[0]);							}						}											}				}			}			if($data['film']['onlineStatus']==1){				if(!$data['film']['site_links'])$data['film']['site_links'][]=array('name'=>'Кинопоиск+','link'=>'https://plus.kinopoisk.ru/film/'.$data["film"]["kpid"].'/');			}else{				if(!$data['film']['site_links']){					$data['film']['site_links'][]=array('name'=>'Искать на Яндекс','link'=>'https://yandex.ru/search/?'.http_build_query(array('text'=>$se_query)));					$data['film']['error']=1;				}								}								//						$this->finalRender('films/detail',$data);		}				public function soon($page=1){					$films=new \models\films();						$cachedata=\cache::read('/soon/'.$page,				function($page){					$films= new \models\films();					$data['list']=$films->getSoonFilms($page,config('list_count'),$num);					$data['num']=$num;					return $data;				},array($page));						$data['list']=$cachedata['list'];			if(!$data['list']  && $page>1)core()->code404();						$num=$cachedata['num'];									//$data['list']=$films->getSoonFilms($page,config('list_count'),$num);								$paginator = new \paginator($num,config('list_count'),$page);			$data['page']=$paginator->build();						$data['quality']=$films->getQuality();						if($page<2){				$data['footer_text']='';				$data['footer_title']='';				$data['footer_img']='';							}						$data['h1']='Скоро в кино';			$data['title']='Скоро в кино, ожидаемые фильмы';			$data['description']='Скоро в кино, ожидаемые фильмы';			$data['keywords']='Скоро в кино, ожидаемые фильмы';			if($page>1){				$data['title'].=". Страница ".$page;				$data['description'].=". Страница ".$page;				$data['keywords'].=", Страница ".$page;				$data['noindex']='noindex';			}			$this->finalRender('films/list',$data);		}						public function all($page=1){					$films=new \models\films();						$cachedata=\cache::read('/all/'.$page,				function($page){					$films= new \models\films();					$data['list']=$films->getAllFilms($page,config('grid_count'),$num);					$data['num']=$num;					return $data;				},array($page));						$data['list']=$cachedata['list'];			if(!$data['list']  && $page>1)core()->code404();			$num=$cachedata['num'];					//	$data['list']=$films->getAllFilms($page,config('grid_count'),$num);								$paginator = new \paginator($num,config('grid_count'),$page);			$data['page']=$paginator->build();						if($page<2){				$data['footer_text']='';				$data['footer_title']='';				$data['footer_img']='';			}						$data['h1']='Список всех фильмов на сайте:';			$data['title']='Все фильмы сайта notfilm.ru';			$data['description']='Все фильмы сайта notfilm.ru';			if($page>1){				$data['title'].=". Страница ".$page;				$data['description'].=". Страница ".$page;			}						$this->finalRender('films/grid',$data);		}							public function camRip($page=1){					$films=new \models\films();			$data['list']=$films->getCamRipFilms($page,config('table_list_count'),$num);			$data['title']='Фильмы качества CamRip';			$data['h1']='Фильмы качества CamRip';			$data['noindex']='noindex';			$paginator = new \paginator($num,config('table_list_count'),$page);			$data['page']=$paginator->build();						$this->finalRender('films/table_list',$data);		}		public function notvid($page=1){					$films=new \models\films();			$data['list']=$films->getNotvidFilms($page,config('table_list_count'),$num);			$data['title']='Фильмы без видео';			$data['h1']='Фильмы без видео';			$data['noindex']='noindex';			$paginator = new \paginator($num,config('table_list_count'),$page);			$data['page']=$paginator->build();						$this->finalRender('films/table_list',$data);		}						public function changedonline($page=1){					$films=new \models\films();			$data['list']=$films->getChangedonline($page,config('table_list_count'),$num);			$data['title']='Фильмы с измененным статусом онлайн';			$data['h1']='Фильмы с измененным статусом онлайн';			$data['noindex']='noindex';			$paginator = new \paginator($num,config('table_list_count'),$page);			$data['page']=$paginator->build();						$this->finalRender('films/table_list',$data);		}				public function setonline(){			db()->where(array('onlineStatus'=>'2'))->update('films',array('onlineStatus'=>1));		}						public function searchpleer(){					$films=new \models\films();			$data['list']=$films->getSearchPleer($_GET['pleer'],$_GET['inv'],$_GET['page'],config('table_list_count'),$num);			$data['title']='Поиск плееров';			$data['h1']='Поиск плееров';			$data['noindex']='noindex';			$paginator = new \paginator($num,config('table_list_count'),$_GET['page']);			$paginator->get=1;			$data['page']=$paginator->build();						$this->finalRender('films/table_list',$data);		}						public function rightholder($page=1){					$films=new \models\films();			$data['list']=$films->getRightholderFilms($page,config('table_list_count'),$num);			$data['title']='Фильмы, удаленные по требованию правообладателей';			$data['h1']='Фильмы, удаленные по требованию правообладателей';			$data['noindex']='noindex';			$paginator = new \paginator($num,config('table_list_count'),$page);			$data['page']=$paginator->build();						$this->finalRender('films/table_list',$data);		}		public function nextser(){					$films=new \models\films();			$data['list']=$films->getNextserFilms();			$data['title']='Сериалы с новыми сериями';			$data['h1']='Сериалы с новыми сериями';			$data['noindex']='noindex';									$this->finalRender('films/table_list',$data);		}							public function forgSer($page=1){					$films=new \models\films();			$data['list']=$films->getForgSer($page,config('table_list_count'),$num);			$data['title']='Забытые сериалы';			$data['h1']='Забытые сериалы';			$data['noindex']='noindex';			$paginator = new \paginator($num,config('table_list_count'),$page);			$data['page']=$paginator->build();						$this->finalRender('films/table_list',$data);		}							public function byYear($year,$page=1){					$films=new \models\films();						$sort=(int)$_COOKIE['sort'];			$sortType=(int)$_COOKIE['sortType'];						if($sort && $sortType){				$films= new \models\films();				$nocachedata['list']=$films->getFilmsByYear($year,$page,config('list_count'),$num);				$nocachedata['num']=$num;				$cachedata=$nocachedata;			}else{				$cachedata=\cache::read('/year/'.$year.'/'.$page,				function($year,$page){					$films= new \models\films();					$data['list']=$films->getFilmsByYear($year,$page,config('list_count'),$num);					$data['num']=$num;					return $data;				},array($year,$page));			}			$data['list']=$cachedata['list'];			if(!$data['list']  && $page>1)core()->code404();			$num=$cachedata['num'];						if(!$num)core()->code404();						$paginator = new \paginator($num,config('list_count'),$page);			$data['page']=$paginator->build();						$data['quality']=$films->getQuality();						if($year==date('Y')){				$nov=' новинки';			}						if($page<2){								if($file=\file::get('/texts/years/'.$year.'.txt')){					$data['footer_text']=file_get_contents($file->path);					$data['footer_title']='Смотрите лучшие фильмы'.$nov.' '.$year.' года онлайн бесплатно';				}				$data['footer_img']='';						}												$data['h1']='Фильмы '.$year.' года';			$data['title']='Фильмы'.$nov.' '.$year.' года смотреть онлайн бесплатно в хорошем качестве';			$data['description']='Смотрите онлайн фильмы '.$year.' года бесплатно и в хорошем качестве';			$data['keywords']='Фильмы, онлайн, бесплатно, '.$year;			if($page>1){				$data['title'].=". Страница ".$page;				$data['description'].=". Страница ".$page;				$data['keywords'].=", страница ".$page;				$data['noindex']='noindex';			}						$this->addScript("/soclikes/social-likes.min.js");			$this->addStyle("/soclikes/social-likes_classic.css");			$data['soclikes']=1;						$data['startSort']=6;						$this->finalRender('films/list',$data);		}									public function search(){					$page=(int)$_GET['page'];			if(!$page)$page=1;					$films=new \models\films();			$data['list']=$films->searchFilm('name',$_GET['search'],$page,config('list_count'),$num);						$paginator = new \paginator($num,config('list_count'),$page);			$paginator->get=true;			$data['page']=$paginator->build();			$data['quality']=$films->getQuality();						$_GET['search']=htmlspecialchars($_GET['search']);						$data['h1']='Поиск: '.$_GET['search'];			$data['title']='Поиск: '.$_GET['search'];			$data['noindex']='noindex';												$this->finalRender('films/list',$data);					}				public function actor(){					$page=(int)$_GET['page'];			if(!$page)$page=1;					$films=new \models\films();			$data['list']=$films->searchFilm('actors',$_GET['search'],$page,config('list_count'),$num);						$paginator = new \paginator($num,config('list_count'),$page);			$paginator->get=true;			$data['page']=$paginator->build();			$data['quality']=$films->getQuality();						$_GET['search']=htmlspecialchars($_GET['search']);						$data['h1']='Поиск по актеру: '.$_GET['search'];			$data['title']='Поиск по актеру: '.$_GET['search'];			$data['noindex']='noindex';						$data['actorSearch']=true;			$this->finalRender('films/list',$data);					}								public function addForm(){									$genre= new \models\genre();			$arr=$genre->select('id,name,anime')->orderBy(array('name'=>'asc'))->getAll();			$data['genre_list']=array();			$data['anime_genre_list']=array();				foreach($arr as $idsrow=>$row){					if($row['anime'] && $row['id']!=config('animegenre_id')){						$data['anime_genre_list'][]=$row;					}else{						$data['genre_list'][]=$row;					};				}			array_unshift($data['anime_genre_list'],array('id'=>0,'name'=>'-'));			array_unshift($data['genre_list'],array('id'=>0,'name'=>'-'));						$selection= new \models\selection();			$arr=$selection->select('id,name')->orderBy(array('name'=>'asc'))->getAll();			array_unshift($arr,array('id'=>0,'name'=>'-'));			$data['selection_list']=$arr;									$country= new \models\country();			$arr=$country->select('id,name')->orderBy(array('name'=>'asc'))->getAll();			array_unshift($arr,array('id'=>0,'name'=>'-'));			$data['country_list']=$arr;						$films= new \models\films();			$arr=$films->select('id,name')->orderBy(array('name'=>'asc'))->getAll();			array_unshift($arr,array('id'=>0,'name'=>'-'));			$data['films_list']=$arr;						$data['quality_list']=$films->getQuality();						$data['captcha']= \form::getCaptcha(array('width'=>150));						$this->addScript('/js/plugins/copyCont.js');			$this->addScript('/js/uidatepick/script.js');			$this->addStyle('/js/uidatepick/style.css');			$this->addScript('/js/jquery.cookie.js');						$data['title']='Добавить фильм';			$data['h1']='Добавить Фильм';			$data['noindex']='noindex';						$this->finalRender('films/add',$data);		}										public function add(){						$data=$this->filt($_POST,'name','ori','actors','country','director','actors','dateRf','year','genre','onlineStatus','selection','parts','text','links','s_links','trailer','quality','lastSer','nextSerDate','lastSerDate','endSer','img_base64','note','channel','titl','kpid');			$data['user_id']=user()->info('id');			$films= new \models\films();						if($films->add($data)){				\cache::delete('/main/',true);				\cache::delete('/menu_newfilms_list/',true);				\cache::delete('/menu_soonfilms_list/',true);				\cache::delete('/soon/',true);				\cache::delete('/top_films_list/',true);				\cache::delete('/top_serials_list/',true);				\cache::delete('/top_show_list/',true);				\cache::delete('/top_anime_list/',true);				\cache::delete('/all/',true);				if($data['year'])\cache::delete('/year/'.$data['year'].'/',true);								foreach($data['genre'] as $val){					\cache::delete('/genrefilms/'.$val.'/',true);				}								foreach($data['selection'] as $val){					\cache::delete('/selfilms/'.$val.'/',true);				}				user()->addlog('Добавил фильм '.$data['name']);						}									if($_POST['selmem']){				setcookie ("selmem", 1,time()+3600, "/");				setcookie ("selid", $_POST['selection'][0],time()+3600, "/");			}else{				setcookie ("selmem", "", time() - 3600, "/");				setcookie ("selid", "", time() - 3600, "/");			}						core()->backpage();		}						public function pocketaddForm(){						$data['captcha']= \form::getCaptcha(array('width'=>150));						$data['title']='Пакетное добавление';			$data['h1']='Пакетное добавление';			$data['noindex']='noindex';						$this->finalRender('films/pocketadd',$data);		}								public function changeForm(){						$data['update']=true;												$films= new \models\films();						if($_POST['id']){								$genre= new \models\genre();				$arr=$genre->select('id,name,anime')->orderBy(array('name'=>'asc'))->getAll();												$data['genre_list']=array();				$data['anime_genre_list']=array();				foreach($arr as $idsrow=>$row){					if($row['anime'] && $row['id']!=config('animegenre_id')){						$data['anime_genre_list'][]=$row;					}else{						$data['genre_list'][]=$row;					};				}				array_unshift($data['anime_genre_list'],array('id'=>0,'name'=>'-'));				array_unshift($data['genre_list'],array('id'=>0,'name'=>'-'));												$selection= new \models\selection();				$arr=$selection->select('id,name')->orderBy(array('name'=>'asc'))->getAll();				array_unshift($arr,array('id'=>0,'name'=>'-'));				$data['selection_list']=$arr;												$country= new \models\country();				$arr=$country->select('id,name')->orderBy(array('name'=>'asc'))->getAll();				array_unshift($arr,array('id'=>0,'name'=>'-'));				$data['country_list']=$arr;												$this->addScript('/js/plugins/copyCont.js');				$this->addScript('/js/uidatepick/script.js');				$this->addStyle('/js/uidatepick/style.css');								$data['quality_list']=$films->getQuality();							if(!user()->priv('change_film_full')){					$films->where(array('user_id'=>user()->info('id'),'insertTimestamp >'=>date("Y-m-d H:i:s",(time()-config('user_time_full_action')))));				}									$data=array_merge($data,$films->with(array('genre'=>'id,anime','selection'=>'id','country'=>'id'))->get($_POST['id']));				$data['anime_genre']=array();								foreach($data['genre'] as $rowid => $row){					if($row['anime']){						$data['anime_genre'][]=$row;						unset($data['genre'][$rowid]);					}				}												if($img=\image::get('/uploads/films/'.$data['id'].'/'.preg_replace("/\-[0-9]{2}\-[0-9]{2}\-[0-9]{4}$/i","",$data['url']).'.jpg')){					$data['img']=$img->cropPath;				}			}												if(!user()->priv('change_film_full')){				$films->where(array('user_id'=>user()->info('id'),'insertTimestamp >'=>date("Y-m-d H:i:s",(time()-config('user_time_full_action')))));			}						$data['list']=$films->addrule('select','id,name')->addRule('orderBy',array('name'=>'asc'))->getAll();			$data['captcha']= \form::getCaptcha(array('width'=>150));						$data['title']='Изменить фильм';			$data['h1']='Изменить фильм';			$data['noindex']='noindex';						$this->finalRender('films/add',$data);		}				public function change(){			$_POST['id']=(int)$_POST['id'];			if($_POST['id']){				$data=$this->filt($_POST,'name','ori','actors','director','country','dateRf','onlineStatus','dateRightholder','year','genre','selection','parts','text','links','s_links','trailer','quality','onmain','lastSer','nextSerDate','lastSerDate','endSer','note','channel','titl','kpid');				$id=$_POST['id'];				$films= new \models\films();								if(!user()->priv('change_film_full')){					$films->where(array('user_id'=>user()->info('id'),'insertTimestamp >'=>date("Y-m-d H:i:s",(time()-config('user_time_full_action')))));				}					$films->change($id,$data);												\cache::delete('/film/'.$id.'/',true);				\cache::delete('/main/',true);				\cache::delete('/menu_newfilms_list/',true);				\cache::delete('/menu_soonfilms_list/',true);				\cache::delete('/soon/',true);				\cache::delete('/top_films_list/',true);				\cache::delete('/top_serials_list/',true);				\cache::delete('/top_show_list/',true);				\cache::delete('/top_anime_list/',true);								if($data['year'])\cache::delete('/year/'.$data['year'].'/',true);								foreach($data['genre'] as $val){					\cache::delete('/genrefilms/'.$val.'/',true);				}				foreach($data['selection'] as $val){					\cache::delete('/selfilms/'.$val.'/',true);				}												user()->addlog('Изменил фильм '.$data['name']);			}															core()->backpage();		}				public function deleteForm(){						$films= new \models\films();						if(!user()->priv('del_film_full')){				$films->where(array('user_id'=>user()->info('id'),'insertTimestamp >'=>date("Y-m-d H:i:s",(time()-config('user_time_full_action')))));			}			$data['list']=$films->addrule('select','id,name')->addRule('orderBy',array('name'=>'asc'))->getAll();			$data['captcha']= \form::getCaptcha(array('width'=>150));						$data['title']='Удалить фильм';			$data['h1']='Удалить фильм';			$data['noindex']='noindex';						$this->finalRender('films/delete',$data);		}				public function delete(){			$_POST['id']=(int)$_POST['id'];			if($_POST['id']){				$films= new \models\films();				if(!user()->priv('del_film_full')){					$films->where(array('user_id'=>user()->info('id'),'insertTimestamp >'=>date("Y-m-d H:i:s",(time()-config('user_time_full_action')))));				}				$film=$films->select('name')->get($_POST['id']);				$films->delete($_POST['id']);								user()->addlog('Удалил фильм '.$film['name']);												\cache::delete('/film/'.$_POST['id'].'/',true);				\cache::delete('/comments/'.$_POST['id'].'/',true);				\cache::delete('/main/',true);				\cache::delete('/menu_newfilms_list/',true);				\cache::delete('/menu_soonfilms_list/',true);				\cache::delete('/soon/',true);				\cache::delete('/top_films_list/',true);				\cache::delete('/top_serials_list/',true);				\cache::delete('/top_show_list/',true);				\cache::delete('/top_anime_list/',true);						}			core()->backpage();		}						public function needcom($page=1){						$films= new \models\films();			$data['list']=$films->needcomFilms(config('table_list_count'));												$data['title']='Список фильмов с оплачиваемыми комментариями';			$data['h1']='Список фильмов с оплачиваемыми комментариями';			$data['noindex']='noindex';						$this->finalRender('films/needcom',$data);		}						public function errorvid($page=1){					$films=new \models\films();			$data['list']=$films->getErrorvidFilms($page,config('table_list_count'),$num);			$data['title']='Фильмы с ошибкой видео';			$data['h1']='Фильмы с ошибкой видео';			$data['noindex']='noindex';			$paginator = new \paginator($num,config('table_list_count'),$page);			$data['page']=$paginator->build();						$this->finalRender('films/table_list',$data);		}						public function ordererror(){			$_POST['id']=(int)$_POST['id'];			if($_POST['id'] && $_COOKIE['errorVid']<3 && $_POST['text']){				$films= new \models\films();				$_POST['text']=\str::crop(strip_tags($_POST['text']),500);				$films->update($_POST['id'],array('error'=>1,'error_text'=>$_POST['text']));				$film=$films->select('name')->get($_POST['id']);				\cache::delete('/film/'.$_POST['id'].'/',true);								setcookie ("errorVid", ($_COOKIE['errorVid']+1),(time()+3600*12), "/");			}						core()->backpage();		}				public function errorOff(){			$id=(int)$_POST['id'];			if($id){				$films= new \models\films();				$films->update($id,array('error'=>0,'error_text'=>''));				$film=$films->select('name')->get($id);				\cache::delete('/film/'.$id.'/',true);			}			if($_POST['all']){				db()->where(array('error'=>'1'))->update('films',array('error'=>0,'error_text'=>''));				\msg::set('success','Исправлены ошибки в фильмах');			}				core()->backpage();		}						public function lcfilms(){											$data['title']='Последние прокомментированные фильмы';			$data['description']='Последние прокомментированные фильмы на notfilm.ru';			$data['keywords']='Последние, прокомментированные, фильмы';			$data['h1']='Последние прокомментированные фильмы';						$data['list']=\cache::read('/lcfilms/',				function(){					$films= new \models\films();					return $films->lcfilms(config('last_com_film_count'));;				});			$data['lcfilms']=true;					$this->finalRender('films/grid',$data);		}				public function getInfoByKinopoisk(){			$url=$_POST['url'];			//$url='http://films.imhonet.ru/element/198080/';			$proxy=$_POST['proxy'];							$films= new \models\films();			$data=$films::getInfoByKinopoisk($url,$proxy);			echo json_encode($data);								}																public function getinfoforimport(){			$selection= new \models\selection();			$data['selection']=$selection->select('id,name')->orderBy(array('name'=>'asc'))->getAll();			$films= new \models\films();			$data['quality']=$films->getQuality();			$genre= new \models\genre();			$data['genre']=$genre->select('id,name')->orderBy(array('name'=>'asc'))->where(array('anime'=>0))->getAll();			$country= new \models\country();			$data['country']=$country->select('id,name')->orderBy(array('name'=>'asc'))->getAll();			echo json_encode($data);		}				public function rate(){						$obj = new \rate('films_rate');			$data=array();			$_POST['film']=(int)$_POST['film'];			if($_POST['film'] && $obj->voice($_POST['film'],$_POST['voice'])){				$rate=$obj->getRate($_POST['film']);				if($rate>0)$rate=round($rate*100,1);				$films= new \models\films();				$films->update($_POST['film'],array('rate'=>$rate));				$data['rate']=$rate;				\cache::delete('/film/'.$_POST['film'].'/',true);			}			echo json_encode($data);		}				public function setSort(){			$sort=(int)$_POST['sort'];			$sortType=(int)$_POST['sortType'];			if($sort && $sortType){				setcookie('sortType',$sortType,NULL,'/');				setcookie('sort',$sort,NULL,'/');			}					}		public function setFilter(){			$selid=(int)$_POST['selid'];			$genid=(int)$_POST['genid'];			if(selid){				$filter=unserialize($_COOKIE['genrefilter']);				if(!is_array($filter))$filter=array();				$filter[$selid]=$genid;				setcookie('genrefilter',serialize($filter),NULL,'/');			}					}				public function massfind(){						$nofind=array();			$find0cat=array();						if($text=$_POST['text']){				$sel=intval($_POST['selnum']);				$text=explode("\r\n",$text);																foreach($text as $row){					$cols=explode("||",$row);					$name=$cols[0];					$year=trim($cols[1]);										if($name){						$films=new \models\films();						if($year)$films->where(array('year'=>$year));												$search=trim($name);						$search=preg_replace('/[^a-zA-Zа-яА-Я0-9]+/iu','%',$search);						$search="%".$search."%";												$films->where(array('name like'=>$search));												if($year){							$films->where(array('year'=>$year));						}						$filmscopy=clone $films;												$list=$films->getAll();						if($sel)$list2=$filmscopy->getAllByRel('selection',$sel);																							if($year)$name.=" || $year";						if(!$list){							$nofind[]=$name;						}						if($list && $sel && !$list2){							$find0cat[]=$name;						}																	}				}															}							$data['nofind']=$nofind;				$data['find0cat']=$find0cat;				$data['text']=$text;								$selection= new \models\selection();				$arr=$selection->select('id,name')->orderBy(array('name'=>'asc'))->getAll();				array_unshift($arr,array('id'=>0,'name'=>'-'));				$data['selection_list']=$arr;								echo $this->render('films/massfind',$data);							}				public function parseonline($id=NULL,$proxy=NULL){			$data['kpLastParse']=date("Y-m-d H:i:s");						if(!$proxy)$proxy=config('proxy');						if(!$proxy){				return false;			}			$films= new \models\films();			$films->select('id,kpid,onlineStatus,serial,show,anime')->where(array('kpid >'=>'0'))->orderBy(array('kpLastParse'=>'asc','year'=>'desc'))->limit(1);			if($id){				$films->where(array('id'=>$id));			}			$film=$films->getAll();												$films->update($film[0]['id'],$data);						$parsestatus= new \table('parsestatus');			$parsestatus->insert(array('id'=>$film[0]['id'],'proxy'=>$proxy));												$parser= new \models\kpparse();			$kpfilm=$parser->getInfoByKinopoisk('https://www.kinopoisk.ru/film/'.$film[0]['kpid'].'/',$proxy);												if($kpfilm['name']){				if($kpfilm['online']){					$data['onlineStatus']=1;					if($film[0]['serial'] || $film[0]['show'] || $film[0]['anime']){						$data['s_links']='https://plus.kinopoisk.ru/film/'.$film[0]['kpid'].'/';					}				}else{					if($film[0]['onlineStatus']==1 || $film[0]['onlineStatus']==2){						$data['onlineStatus']=2;					}else{						$data['onlineStatus']=0;					}				}				$films->update($film[0]['id'],$data);								$parsestatus->update($film[0]['id'],array('status'=>'1'));				$parsestatus->whereOr(array('timestamp <'=>date("Y-m-d H:i:s",time()-(60*60*48))))->delete(0);							}			if($id){				var_dump($film);				var_dump($kpfilm);			}		}				public function parseonlineproxy(){			$proxyarray=config('proxyarray');						$parsestatus= new \table('parsestatus');			$data=$parsestatus->orderBy(array('timestamp'=>'desc'))->limit(1)->getAll();			$lastproxy=$data[0]['proxy'];						$key=array_search($lastproxy,$proxyarray);			if($key===false)$key=-1;			$key++;			if($key>=count($proxyarray))$key=0;						$proxy=$proxyarray[$key];												if(!$proxy){				echo "Отсутствует прокси";				return;			}			self::parseonline(NULL,$proxy);		}						public function parsestat(){			$parsestatus= new \table('parsestatus');			$data['list']=$parsestatus->select('films.id,name,url,parsestatus.timestamp,parsestatus.proxy,status')->leftjoin('films','parsestatus.id','films.id')->orderBy(array('parsestatus.timestamp'=>'desc'))->getAll();			$data['title']='Статистика парсера';			$data['h1']='Статистика парсера';						$this->finalRender('films/parsestat',$data);		}				public function refreshparsestat(){			db()->query("UPDATE `films` SET `kpLastParse`='0000-00-00 00:00:00' where `id` in (select `id` from `parsestatus` where `status`='0')");			echo 'Даты сброшены';		}		public function accessRules(){			return array(				'addForm'=>user()->priv('add_film'),				'add'=>user()->priv('add_film'),				'changeForm'=>user()->priv('change_film'),				'change'=>user()->priv('change_film'),				'deleteForm'=>user()->priv('del_film'),				'delete'=>user()->priv('del_film'),				'notvid'=>(user()->info('id')==1),				'rightholder'=>(user()->info('id')==1),				'nextser'=>(user()->info('id')==1),				'forgSer'=>(user()->info('id')==1),				'camRip'=>(user()->info('id')==1),								'needcom'=>user()->isAuth(),				'errorvid'=>(user()->info('id')==1),				'errorOff'=>(user()->info('id')==1),				'searchpleer'=>(user()->info('id')==1),				'pocketaddForm'=>(user()->info('id')==1),				'getInfoByKinopoisk'=>(user()->info('id')==1),				'parsestat'=>(user()->info('id')==1),				'refreshparsestat'=>(user()->info('id')==1),				'changedonline'=>(user()->info('id')==1),				'massfind'=>(user()->info('id')==1),			);		}		public function captchaRules(){			$arr=array('change','delete');			if(user()->info('id')!=1){				$arr[]='add';			}			return $arr;		}			}?>