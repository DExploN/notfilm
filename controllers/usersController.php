<?	namespace controllers;	class usersController extends \controller{				public function addForm(){			$data['title']='Регистрация';			$data['h1']='Регистрация';			$data['description']='Регистрация';			$data['noindex']='noindex';						$data['captcha']= \form::getCaptcha(array('width'=>150));			$this->finalRender('user/add',$data);		}				public function add(){			$data=$this->filt($_POST,'login','password','password2','mail');			if(\models\users::addUser($data)){				user()->addlog('Новая регистрация. Пользователь: '.$data['login']);			}			core()->backpage();		}						public function profileForm(){			$data['title']='Профиль';			$data['h1']='Профиль';			$data['noindex']='noindex';			$data['captcha']= \form::getCaptcha(array('width'=>150));			$data['mail']=user()->info('mail');			$data['balance']=user()->info('balance');						if($img=\image::get('/uploads/users/'.user()->info('id').'/image.jpg')){				$data['img']=$img->cropPath;			}			$this->finalRender('user/profile',$data);		}				public function profile(){			$data=$this->filt($_POST,'password','password2','mail');			if($_POST['id'] && user()->info('id')==1){				$id=$_POST['id'];				$data['activate']=(int)$_POST['activate'];				$data['banned']=(int)$_POST['banned'];				$data['ban_reason']=$_POST['ban_reason'];								$us=user()->select('login')->get($id);								user()->addlog('Изменил пользователя id: '.$id.' login: '.$us['login']);			}else{				$id=user()->info('id');				user()->addlog('Изменил свой профиль');			}						\models\users::changeInfo($id,$data);			core()->backpage();		}						public function changeForm(){			$data['title']='Изменить пользователя';			$data['h1']='Изменить пользователя';			$data['noindex']='noindex';			$data['captcha']= \form::getCaptcha(array('width'=>150));			$data['change']=true;			$data['id']=$_POST['id'];			$users=new \models\users();			$data['users_list']=$users->select('id,login')->where(array('id !='=>1))->orderby(array('login'=>'asc'))->getAll();			if($_POST['id']){				$user=$users->get($_POST['id']);				$data['mail']=$user['mail'];				$data['activate']=$user['activate'];				$data['banned']=$user['banned'];				$data['balance']=$user['balance'];				$data['ban_reason']=$user['ban_reason'];				if($img=\image::get('/uploads/users/'.$user['id'].'/image.jpg')){					$data['img']=$img->cropPath;				}			}												$this->finalRender('user/profile',$data);		}						public function login(){			\models\users::login($_POST['login'],$_POST['password']);			core()->backpage();		}				public function logout(){			\models\users::logout();			core()->redirect('/');		}				public function deleteForm(){			$users=new \models\users();			$data['users_list']=$users->select('id,login')->where(array('id !='=>1))->orderby(array('login'=>'asc'))->getAll();			$data['title']='Удалить пользователя';			$data['h1']='Удалить пользователя';			$data['noindex']='noindex';			$data['captcha']= \form::getCaptcha(array('width'=>150));			$this->finalRender('user/delete',$data);		}				public function delete(){			$_POST['id']=(int)$_POST['id'];						if($_POST['id']){						$us=user()->select('login')->get($_POST['id']);						\users::delUser($_POST['id']);			\dir::delete('/uploads/users/'.$_POST['id'].'/');								user()->addlog('Удалил пользователя id: '.$_POST['id'].' login: '.$us['login']);			}			core()->backpage();		}						public function privilegesForm(){			$users=new \models\users();			$data['users_list']=$users->select('id,login')->where(array('id !='=>1))->orderby(array('login'=>'asc'))->getAll();			$data['title']='Привилегии пользователя';			$data['h1']='Привилегии пользователя';			$data['noindex']='noindex';			if($_POST['id']){				$data['captcha']= \form::getCaptcha(array('width'=>150));				$data['curuser']=\users::load($_POST['id']);			}				$this->finalRender('user/privileges',$data);		}						public function privileges(){			$privs=array('add_film','change_film','change_film_full','del_film','del_film_full');			$data=array();			foreach($privs as $priv){				$data[$priv]=$_POST[$priv];			}						\users::changePriv($_POST['id'],$data);			$us=user()->select('login')->get($_POST['id']);			user()->addlog('Изменил привелегии пользователя id: '.$_POST['id'].' login: '.$us['login']);			core()->backpage();		}				public function activate($login,$code){			if(\models\users::activate($login,$code)){				user()->addlog('Активация пользователя: '.$login.' прошла успешно');			}else{				user()->addlog('Ошибка активации пользователя: '.$login);			}						core()->redirect('/');		}				public function remindForm(){			$data['title']='Напоминание пароля';			$data['h1']='Напоминание пароля';			$data['description']='Напоминание пароля';			$data['noindex']='noindex';			$data['captcha']= \form::getCaptcha(array('width'=>150));			$this->finalRender('user/remind',$data);		}				public function remind(){			\models\users::remind($_POST['mail']);			core()->backpage();		}				public function journal(){					$page=core()->request('page');			$login=core()->request('login');			$hp=NULL;			if($_POST['login']){				$login=$_POST['login'];				$hp='/service/journal/'.$login.'/';			}						$data['user_login']=$login;					$jour= new \table('journal');									if($login)$jour->where(array('login'=>$login));						$data['list']=$jour->orderBy(array('timestamp'=>'desc'))->getAllByPage($page,config('table_list_count'),$num);			$page=new \paginator($num,config('table_list_count'),$page,$hp);			$data['page']=$page->build();						$users= new \models\users();			$data['users_list']=$users->select('login')->orderby(array('login'=>'asc'))->getAll();									$data['title']='Журнал';			$data['h1']='Журнал';			$data['noindex']='noindex';			$this->finalRender('user/journal',$data);		}				public function accessRules(){			return array(				'profileForm'=>user()->isAuth(),				'profile'=>user()->isAuth(),				'changeForm'=>(user()->info('id')==1),				'deleteForm'=>(user()->info('id')==1),				'delete'=>(user()->info('id')==1),				'privilegesForm'=>(user()->info('id')==1),				'privileges'=>(user()->info('id')==1),				'journal'=>(user()->info('id')==1),			);		}		public function captchaRules(){		 return array('add','profile','change','delete','privileges','remind');		}	}?>