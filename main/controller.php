<?class controller{	private static $_styles=array();	private static $_scripts=array();	protected $headerView="layout/header";	protected $footerView="layout/footer";	protected $layoutCAction="_layout/main";	final public function __construct(){			}		final protected function render($view,$data=array()){		if($data && !is_array($data)){echo "В шаблон $view подан не массив";return false;}				$viewName=end(explode('/',$view));		$style="/views/".$view."/".$viewName."Style.css";		$script="/views/".$view."/".$viewName."Script.js";		$tamplatePath=ROOT."/views/".$view."/".$viewName."View.php";		$stylePath=ROOT.$style;		$scriptPath=ROOT.$script;		if(file_exists($tamplatePath)){			if(file_exists($stylePath))self::$_styles[$style]=$style;			if(file_exists($scriptPath))self::$_scripts[$script]=$script;			if(is_array($data)){				extract($data,EXTR_PREFIX_SAME,"data_");			}			ob_start();			include($tamplatePath);			$str=ob_get_contents();			ob_end_clean();			return $str;		}else{			echo "Шаблон $view не найден";			return false;		}	}	final protected function addStyle($style){		if(file_exists(ROOT.$style)){			self::$_styles[$style]=$style;		}	}	final protected function addScript($script){		if(file_exists(ROOT.$script)){			self::$_scripts[$script]=$script;		}	}		final protected function getStyles(){		foreach(self::$_styles as $style){			$str.="<link href='$style' rel='stylesheet' type='text/css' />\r\n";		}		return $str;	}	final protected function getScripts(){		foreach(self::$_scripts as $script){			$str.="<script src='$script' type='text/javascript' ></script>\r\n";		}		return $str;	}	public function finalRender($view,$data=array()){		if($data && !is_array($data)){echo  "В шаблон $view подан не массив";return; }			$layoutData=core()->runController($this->layoutCAction,array($data),false);				if(is_array($layoutData)){			$data=array_merge($layoutData,$data);		}else{			$data['_layoutData']=$layoutData;		}		$middle=$this->render($view,$data);		$footer=$this->render($this->footerView,$data);		echo $this->render($this->headerView,$data);		echo $middle;		echo $footer;	}		public function filt($arr){		$data=func_get_args();		array_shift($data);		return array_intersect_key($arr,array_flip($data));	}			public function accessRules(){		return array();	}		public function gAccess($action){		$array=$this->accessRules();		if(isset($array[$action])){			if($array[$action]===false)$array[$action]=0;			return $array[$action];		}else{			return true;		}			}		public function captchaRules(){		return array();	}		public function gCaptcha($action){		return array_search($action,$this->captchaRules());	}} ?>